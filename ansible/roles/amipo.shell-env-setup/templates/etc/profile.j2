# {{ ansible_managed }}

# Begin /etc/profile
# Written for Beyond Linux From Scratch
# by James Robertson <jameswrobertson@earthlink.net>
# modifications by Dagmar d'Surreal <rivyqntzne@pbzpnfg.arg>

# System wide environment variables and startup programs.

# System wide aliases and functions should go in /etc/bashrc.  Personal
# environment variables and startup programs should go into
# ~/.bash_profile.  Personal aliases and functions should go into
# ~/.bashrc.

# Functions to help us manage paths.  Second argument is the name of the
# path variable to be modified (default: PATH)
pathremove () {
        local IFS=':'
        local NEWPATH
        local DIR
        local PATHVARIABLE=${2:-PATH}
        for DIR in ${!PATHVARIABLE} ; do
                if [ "$DIR" != "$1" ] ; then
                  NEWPATH=${NEWPATH:+$NEWPATH:}$DIR
                fi
        done
        export $PATHVARIABLE="$NEWPATH"
}

pathprepend () {
        pathremove $1 $2
        local PATHVARIABLE=${2:-PATH}
        export $PATHVARIABLE="$1${!PATHVARIABLE:+:${!PATHVARIABLE}}"
}

pathappend () {
        pathremove $1 $2
        local PATHVARIABLE=${2:-PATH}
        export $PATHVARIABLE="${!PATHVARIABLE:+${!PATHVARIABLE}:}$1"
}

export -f pathremove pathprepend pathappend

# Set the initial path
#export PATH=/bin:/usr/bin
export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games

# If user is root
if [ $EUID -eq 0 ] ; then
        pathappend /usr/local/sbin:/usr/sbin:/sbin
	{% if envShortName == 'prod' %}
        unset HISTFILE
	{% endif %}
fi

if [ "${PS1-}" ]; then
  #if [ "${BASH-}" ] && [ "$BASH" != "/bin/sh" ]; then
  #  # The file bash.bashrc already sets the default PS1.
  #  # PS1='\h:\w\$ '
  #  if [ -f /etc/bash.bashrc ]; then
  #    . /etc/bash.bashrc
  #  fi
  #else


    # Setup some environment variables.
    export HISTSIZE=-1
    export HISTFILESIZE=-1
    export HISTIGNORE="&:[bf]g:exit:[ ]*"
    {% if envShortName in ['dev', 'ctlr'] %}
    export HISTFILE="{{ host_persistent_dir }}/${USER}_bash_history"
    {% endif %}
    
    # don't put duplicate lines or lines starting with space in the history.
    # See bash(1) for more options
    HISTCONTROL=ignoreboth
    
    # append to the history file, don't overwrite it
    shopt -s histappend
    
    # check the window size after each command and, if necessary,
    # update the values of LINES and COLUMNS.
    shopt -s checkwinsize
    
    # Set some defaults for graphical systems
    export XDG_DATA_DIRS=${XDG_DATA_DIRS:-/usr/share/}
    export XDG_CONFIG_DIRS=${XDG_CONFIG_DIRS:-/etc/xdg/}
    export XDG_RUNTIME_DIR=${XDG_RUNTIME_DIR:-/tmp/xdg-$USER}
    
    txtblk='\[\e[0;30m\]' # Black - Regular
    txtred='\[\e[0;31m\]' # Red
    txtgrn='\[\e[0;32m\]' # Green
    txtylw='\[\e[0;33m\]' # Yellow
    txtblu='\[\e[0;34m\]' # Blue
    txtpur='\[\e[0;35m\]' # Purple
    txtcyn='\[\e[0;36m\]' # Cyan
    txtwht='\[\e[0;37m\]' # White
    bldblk='\[\e[1;30m\]' # Black - Bold
    bldred='\[\e[1;31m\]' # Red
    bldgrn='\[\e[1;32m\]' # Green
    bldylw='\[\e[1;33m\]' # Yellow
    bldblu='\[\e[1;34m\]' # Blue
    bldpur='\[\e[1;35m\]' # Purple
    bldcyn='\[\e[1;36m\]' # Cyan
    bldwht='\[\e[1;37m\]' # White
    unkblk='\[\e[4;30m\]' # Black - Underline
    undred='\[\e[4;31m\]' # Red
    undgrn='\[\e[4;32m\]' # Green
    undylw='\[\e[4;33m\]' # Yellow
    undblu='\[\e[4;34m\]' # Blue
    undpur='\[\e[4;35m\]' # Purple
    undcyn='\[\e[4;36m\]' # Cyan
    undwht='\[\e[4;37m\]' # White
    bakblk='\[\e[40m\]'   # Black - Background
    bakred='\[\e[41m\]'   # Red
    bakgrn='\[\e[42m\]'   # Green
    bakylw='\[\e[43m\]'   # Yellow
    bakblu='\[\e[44m\]'   # Blue
    bakpur='\[\e[45m\]'   # Purple
    bakcyn='\[\e[46m\]'   # Cyan
    bakwht='\[\e[47m\]'   # White
    txtrst='\[\e[0m\]'    # Text Reset
    
    TXT_COLOR="$bldwht"
    ENV_COLOR="{{ envPs1Color }}"
    BGD_COLOR="{{ envPs1BgdColor }}"
    ENV_NAME="{{ envShortName }}"
    
    # Setup a red prompt for root and a green one for users.
    if [[ $EUID == 0 ]] ; then
      USER_COLOR="$bldred"
    else
      USER_COLOR="$bldgrn"
    fi
    
    __git_branch='`git branch 2> /dev/null | grep -e ^* | sed -E  s/^\\\\\*\ \(.+\)$/\(\\\\\1\)\ /`' 
    
    #PS1="$bldwht[\t] $USER_COLOR\u@\h $ENV_COLOR $ENV_SHORTNAME: \w $txtrst$bldwht > $txtrst"
    PS1="$TXT_COLOR[\t] $BGD_COLOR[$ENV_NAME]$txtrst $USER_COLOR\u@\h $ENV_COLOR\w $bldylw$__git_branch$TXT_COLOR > $txtrst"
    
    for script in /etc/profile.d/*.sh ; do
            if [ -r $script ] ; then
                    . $script
            fi
    done
    
    unset script txtblk txtred txtgrn txtylw txtblu txtpur txtcyn txtwht bldblk bldred bldgrn bldylw bldblu bldpur bldcyn bldwht unkblk undred undgrn undylw undblu undpur undcyn undwht bakblk bakred bakgrn bakylw bakblu bakpur bakcyn bakwht txtrst TXT_COLOR ENV_COLOR BGD_COLOR ENV_NAME USER_COLOR __git_branch

  #fi
fi

# End /etc/profile

