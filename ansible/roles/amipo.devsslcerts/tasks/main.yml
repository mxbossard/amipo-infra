---

# This role generate dev private key, X509 certificate and certification chain for webfront dev environment.
# Certificates are signed by the dev root AC.
# Some variables are needed to execute the role:
# * common_name
# * alt_names

- name: "Force cert renew by removing cert directory"
  file:
    path: "{{ dev_ssl_cert_dir }}"
    state: "absent"
  when: force_cert_renew

- name: Create directory
  file:
    path: "{{ dev_ssl_cert_dir }}"
    state: "directory"
    owner: "{{ webServerSystemUser }}"
    mode: "0400"

- name: Generate a private key
  shell: "openssl {{ dev_ssl_privkey_cipher }} -out {{ dev_ssl_privkey_filepath }} {{ dev_ssl_privkey_numbits }}"
  args:
    creates: "{{ dev_ssl_privkey_filepath }}"
  notify: Reload nginx

- name: Generate a CSR
  shell: "cp /etc/ssl/openssl.cnf /etc/openssl/amipo_dev_openssl.cnf; echo '\n[SAN]\nsubjectAltName={{ dev_ssl_altnames }}\n' >> /etc/openssl/amipo_dev_openssl.cnf; openssl req -key {{ dev_ssl_privkey_filepath }} -new -sha256 -out {{ dev_ssl_csr_filepath }} -subj '{{ dev_ssl_subject }}' -reqexts SAN -extensions SAN -config /etc/openssl/amipo_dev_openssl.cnf"
  #shell: "openssl req -key {{ dev_ssl_privkey_filepath }} -new -sha256 -out {{ dev_ssl_csr_filepath }} -subj '{{ dev_ssl_subject }}'"
  args:
    creates: "{{ dev_ssl_csr_filepath }}"
  register: csr_result

- name: Create openssl work dir
  file:
    path: "/etc/openssl/work/demoCA/newcerts"
    state: directory
    mode: "0755"
  when: csr_result is changed

- name: Collect minimum facts 
  setup:
    gather_subset:
      - '!all'

- name: Init openssl serial based on epoch time
  copy:
    content: "0{{ ansible_date_time.epoch | int / 10 - 150000000 }}"
    dest: "/etc/openssl/work/demoCA/serial"
    mode: "0400"
    force: no
  when: csr_result is changed

- name: Init openssl index.txt
  copy:
    content: ""
    dest: "/etc/openssl/work/demoCA/index.txt"
    mode: "0400"
  when: csr_result is changed

#- name: Configure openssl dirs permisions
#  file:
#    path: "{{ item }}"
#    state: directory
#    mode: "0755"
#  with_items:
#    - /etc/openssl
#    - /etc/openssl/work
#    - /etc/openssl/work/demoCA

- name: Configure CA to copy extensions
  lineinfile:
    path: "/etc/ssl/openssl.cnf"
    insertafter: '^\[ CA_default \]'
    regexp: '^#?\s*copy_extensions\s*='
    line: "copy_extensions = copy"

- name: Sign the CSR
  shell: "cd /etc/openssl/work; openssl ca -days 375 -notext -md sha256 -in {{ dev_ssl_csr_filepath }} -out {{ dev_ssl_cert_filepath }} -keyfile {{ root_AC_privkey_filepath }} -cert {{ root_AC_cert_filepath }} -batch"
  args:
    creates: "{{ dev_ssl_cert_filepath }}"
  notify: Reload nginx

- name: Copy chain.pem file
  copy:
    src: "{{ root_AC_cert_filepath }}"
    dest: "{{ dev_ssl_chain_filepath }}"

- name: Concat fullchain.pem file
  shell: "cat {{ dev_ssl_cert_filepath }} {{ dev_ssl_chain_filepath }} > {{ dev_ssl_fullchain_filepath }}"
  args:
    creates: "{{ dev_ssl_fullchain_filepath }}"
  notify: Reload nginx

- name: Restrict privileges of private key
  file:
    path: "{{ dev_ssl_cert_dir }}"
    recurse: yes
    owner: "{{ webServerSystemUser }}"
    mode: "0400"

# vi: tabstop=2 expandtab shiftwidth=2 softtabstop=2
