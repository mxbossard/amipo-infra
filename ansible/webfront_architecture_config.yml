---

# Configure the nginx front web architecture.
# Maintain 1 file in conf.d for each server block.

- name: Configure nginx front web architecture
  hosts: webfront
  become: yes

  vars:
    server_block_template: "nginx/webFrontArchserverBlock.j2"
    dev_index_template: "webfront/dev_index.html.j2"
    dev_root_ac_pub_filename: "amipo_personal_dev_root_ac.pem"
    global_conf_template: "nginx/global.conf.j2"

  tasks:
    - name: Ensure default site root directory exists
      file: 
        path: "{{ default_root_dir }}"
        state: directory
        owner: "{{ webServerSystemUser }}"
        mode: "0555"

    - name: Copy dev index.html
      template:
        src: "{{ dev_index_template }}"
        dest: "{{ default_root_dir }}/index.html"
        owner: "{{ webServerSystemUser }}"
        mode: "0444"
      when: "'development' in group_names"

    - name: Copy dev root AC in dev www
      copy:
        src: "{{ root_AC_cert_filepath }}"
        dest: "{{ default_root_dir }}/{{ dev_root_ac_pub_filename }}"
        owner: "{{ webServerSystemUser }}"
        mode: "0444"
      when: "'development' in group_names"

    - name: Build server block files
      template:
        src: "{{ server_block_template }}"
        dest: "{{ nginx_conf_dir }}/{{ item.key }}"
        owner: "{{ webServerSystemUser }}"
        mode: "0444"
        lstrip_blocks: yes
      with_dict: "{{ webfront_architecture_map }}"
      notify: Reload nginx

    - name: Add nginx global.conf file
      template:
        src: "{{ global_conf_template }}"
        dest: "{{ nginx_conf_dir }}/global.conf"
        owner: "{{ webServerSystemUser }}"
        mode: "0444"
        lstrip_blocks: yes
      notify: Reload nginx
         

    - name: List all .conf files to check against managed files
      shell: for f in {{ nginx_conf_dir }}/*.conf; do basename $f; done
      register: contents
      changed_when: False

    #- debug: msg={{ contents }}

    - name: Remove .conf files which are not managed by this playbook for security reasons
      file:
        path: "{{ nginx_conf_dir }}/{{ item }}"
        state: absent
      with_items: "{{ contents.stdout_lines }}"
      when: webfront_architecture_map[item] is not defined and not item == 'global.conf'
      notify: Reload nginx

  handlers:
    - name: Reload nginx
      service:
        name: nginx
        state: reloaded

# vi: tabstop=2 expandtab shiftwidth=2 softtabstop=2
