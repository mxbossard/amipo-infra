
{% for name, server in item.value.iteritems() %}
# Server block {{ name }}
server {
    listen {{ server.listen }};
    server_name {{ server.server_name | join(' ') }};
    root {{ server.root }};

  {% include 'amipo_error_pages.part.j2' %}

  {% include 'amipo_security.part.j2' %}

  {% if 'ssl' in server.listen and server.cert_name is defined %}
    {% set ssl_cert_dir = ssl_cert_parent_dir + '/' + ssl_certs_map[server.cert_name].common_name %}
    ssl_certificate {{ ssl_cert_dir }}/{{ ssl_fullchain_filename }};
    ssl_certificate_key {{ ssl_cert_dir }}/{{ ssl_privkey_filename }};

    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate {{ ssl_cert_dir }}/{{ ssl_chain_filename }};
  {% endif %}

  {% if server.index is defined %}
    index {{ server.index }};
  {% endif %}

  {% if server.locations is defined %}
  {% for path, location in server.locations.iteritems() %}
    location {{ path }} {
      {#
      {% if location.try_files is defined %}
        try_files {{ location.try_files }};
      {% endif %}
      {% if location.return is defined %}
        return {{ location.return }}; 
      {% endif %}
      #}
      {% for ruleName, ruleValue in location.iteritems() %}
        {{ ruleName }} {{ ruleValue }};
      {% endfor %}
    }

  {% endfor %}
  {% endif %}
}

{% endfor %}
