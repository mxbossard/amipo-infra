---

- name: Setup ansible controller
  hosts: controller
  become: yes

  vars_files:
    - config-global.yml
    - "{{ configHome }}/config-{{ envName }}.yml"
    - "{{ configHome }}/lxc.yml"

  vars:
    provisioningKeyFilepath: "{{ controllerHome }}/.ssh/provisioning_key"
    hostSshDir: "{{ controllerHome }}/.host_ssh"

  tasks:
    - name: Install some packages
      apt:
        name: "{{ item }}"
      with_items:
        - dnsmasq

    - name: Add cd ansible to .profile file
      lineinfile: 
        path: "{{ controllerHome }}/.profile" 
        line: "cd {{ ansibleHome }}" 

    - name: Update PATH
      lineinfile: 
        path: "{{ controllerHome }}/.profile" 
        line: "PATH=$PATH:/vagrant/scripts" 

    - name: Build provisioning ssh key pair
      shell: "/bin/bash -c 'ssh-keygen -b 4096 -t rsa -f {{ provisioningKeyFilepath }} -q -N \"\"'"
      args:
        creates: "{{ provisioningKeyFilepath }}"
      become_user: "{{ controllerUser }}"

    - name: Copy host ssh config in .ssh controller dir
      synchronize:
        src: "{{ hostSshDir }}/"
        dest: "{{ controllerHome }}/.ssh/"

    - name: Copy lxc inventory script
      template:
        src: lxcLocalInventory.sh.j2
        dest: "{{ inventoryHome }}/lxcLocalInventory.sh"
        owner: "{{ controllerUser }}"
        group: "{{ controllerUser }}"
        mode: 0744

    - name: Add static route for LXC containers
      shell: "ip route add {{ lxcSubnet }} via {{ lxcHostIp }}"
      register: result
      changed_when: result | succeeded
      failed_when: no

    - name: Add route in .profile
      lineinfile: 
        path: "{{ controllerHome }}/.profile"
        regexp: "ip route add {{ lxcSubnet }}"
        line: "ip route show | grep '{{ lxcSubnet }}' > /dev/null || sudo ip route add {{ lxcSubnet }} via {{ lxcHostIp }} || true" 

    - name: Create dnsmasq lxc config file
      copy:
        content: ""
        dest: /etc/dnsmasq.d/lxc
        mode: 0644
        force: no

    - name: Configure dnsmasq to resolve .lxc domain
      lineinfile:
        dest: /etc/dnsmasq.d/lxc
        regexp: "server="
        line: "server=/lxc/{{ lxcGateway }}"
      notify:
        - Restart dnsmasq

  handlers:
    - name: Restart dnsmasq
      service:
        name: dnsmasq
        state: restarted

