---

# A special playbook responsible to build LXC containers. This playbook is special, because it run on "lxc_host" group, and don't use a standard ansible inventory file. 

- name: Auto build LXC containers
  #hosts: lxc_host
  hosts: all
  run_once: yes
  gather_facts: no
  ignore_errors: no
  any_errors_fatal: True

  vars_files:
    - config-global.yml
    - "{{ configHome }}/lxc.yml"
    - "{{ configHome }}/config-{{ envName }}.yml"

  vars:
    lxcHostToUse: amipo1.dev
    limitSubset: "{{ limitPattern | default ('all') }}"
    infraInventoryFile: "{{ ansibleHome + '/amipo_infra.yml' }}"

  tasks:
    - set_fact:
        infraConfig: "{{ lookup('file', infraInventoryFile) | from_yaml }}"

    - set_fact:
        #infraHosts: "{{ infraConfig.containers }}"
        infraGroups: "{{ infraConfig.groups }}"
        #infraParents: "{{ infraConfig.parents }}"
        #infraHosts: {}

    # Add .lxc suffix to all infra hosts
    - set_fact:
        infraHosts: "{{ infraHosts | default({}) | combine({(item.key | regex_replace('\\.lxc', '') + '.lxc'): item.value}) }}"
      with_dict: "{{ infraConfig.containers }}" 

    - debug: var=limitSubset
    #- debug: var=infraHosts
    #- debug: var=infraGroups
    #- debug: var=infraParents

    - name: List LXC containers
      #shell: "lxc-ls -1 | awk '{print $1 \".lxc\"}'"
      shell: "lxc-ls -1"
      register: result
      become: yes
      become_user: "{{ lxcUser }}"
      changed_when: no
      delegate_to: "{{ lxcHostToUse }}"

    - name: Register lists of all existing CTs
      set_fact:
        allExistingCts: "{{ result.stdout_lines }}"

    # By default container is in lxc group and in it's own group
    - name: Include infra hosts
      add_host:
        #name: "{{ item.key | regex_replace('\\.lxc$', '') }}.lxc"
        name: "{{ item.key }}"
        #groups: "lxc,{{ item.key | regex_replace('\\.lxc$', '') }},{{ item.value | join(',') }}"
        groups: "lxc,{{ item.value | join(',') }}"
      with_dict: "{{ infraHosts }}"
      changed_when: no

    - name: Include infra groups
      add_host:
        name: "{{ item.key }}"
        groups: "lxc,{{ item.value | join(',') }}"
      with_dict: "{{ infraGroups }}"
      changed_when: no

    #- debug: var=hostvars
    - debug: var=ansible_play_hosts

    - set_fact:
        targetedSubset: "{{ groups[(limitSubset | regex_replace('\\.lxc$', '')) + '.lxc'] | default([]) | intersect(groups['lxc']) }}"

    #- name: Include infra parent groups
    #  add_host:
    #    name: "{{ item.1 }}"
    #    groups: "{{ item.0.key }}"
    #  with_subelements: 
    #    - "{{ infraGroups }}"
    #    - parents
    #  changed_when: no

    - name: Register lists of present and missing CTs
      set_fact:
        presentCts: "{{ targetedSubset | intersect(allExistingCts) }}"
        missingCts: "{{ targetedSubset | difference(allExistingCts) }}" # | difference(groups['lxc_host']) }}"

    - debug: var=targetedSubset
    - debug: var=presentCts
    - debug: var=missingCts

    # Due to a bug, include_role doesn't delegate_to handlers.
    # cf https://github.com/ansible/ansible/issues/26336
    #- name: Create not existing CTs
    #  include_role:
    #    name: lxc_container
    #  vars:
    #    distribName: "{{ hostvars[item].distribName }}"
    #    distribRelease: "{{ hostvars[item].distribRelease }}"
    #    ctName: "{{ item | regex_replace('\\.lxc$', '' ) }}"
    #    ctGroups: ""
    #    ctPortsMapping: ""
    #  #delegate_to: amipo1.dev
    #  with_items: "{{ missingCts }}"

    #- name: Build hostGroups map
    #  set_fact:
    #    hostGroups: "{{ hostGroups | default([]) + [ {'host': item, 'groups': hostvars[item]['group_names']} ] }}"
    #  with_items: "{{ targetedSubset }}"

    #- debug: var=hostGroups

    #- name: Build hostAllVars map
    #  set_fact:
    #    hostAllVars: "{{ hostAllVars | default({}) | combine({ item.0.host: (hostvars[item.0.host][item.1] | default({})) }, recursive= True) }}"
    #  with_subelements: 
    #    - "{{ hostGroups }}"
    #    - groups

    #- debug: var=hostAllVars

    # Call ansible-playbook instead of include_role to workaround the bug
    - name: Create not existing CTs
      shell: cd {{ ansibleHome }}; ansible-playbook {{ ansibleHome }}/no_prompt_create_lxc_container.yml --extra-vars "containerName={{ item | regex_replace('\\.lxc$', '' ) }} containerGroups='{{ infraHosts[item] | to_yaml }}' distribName='{{ hostvars[item].distribName }}' distribRelease='{{ hostvars[item].distribRelease }}' portsMapping='{{ (hostvars[item].ctPortsMapping | default({})) | to_yaml }}' volumeRules='{{ (hostvars[item].ctVolumeRules | default({})) | to_yaml }}'"
      delegate_to: localhost
      become: yes
      become_user: "{{ controllerUser }}"
      register: result
      with_items: "{{ missingCts }}"

    - debug: var=result
      when: missingCts | length > 0

    - name: Ensure CTs are started
      lxc_container:
        name: "{{ item | regex_replace('\\.lxc$', '' ) }}"
        state: started
      become: yes
      become_user: "{{lxcUser}}"
      with_items: "{{ presentCts }}"

    - name: Wait for port 22 to become open and contain "OpenSSH"
      wait_for:
        port: 22
        host: "{{ item | regex_replace('\\.lxc$', '') }}.lxc"
        search_regex: OpenSSH
        delay: 2
        timeout: 120
      connection: local
      with_items: "{{ presentCts + missingCts }}"

    - name: Refresh inventory
      meta: refresh_inventory

# vi: tabstop=2 expandtab shiftwidth=2 softtabstop=2
